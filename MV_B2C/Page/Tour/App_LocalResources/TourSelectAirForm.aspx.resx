<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnBack.Text" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="btnContinue.Text" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="lblAccommodate.Text" xml:space="preserve">
    <value>Hotel accommodate in Comfort Inn Universal Studio with Daily Continental Breakfast</value>
  </data>
  <data name="lblAccommodations.Text" xml:space="preserve">
    <value>Hotel accommodations based on double occupancy, Child(Under 12 years old) rate is without bed</value>
  </data>
  <data name="lblAccommodationsWest.Text" xml:space="preserve">
    <value>Hotel accommodations based on double occupancy, Child(Under 11 years old) rate is without bed</value>
  </data>
  <data name="lblAddressOr.Text" xml:space="preserve">
    <value>Address: 6101 Sand Lake Rd. Orlando FL 32819</value>
  </data>
  <data name="lblAdult.Text" xml:space="preserve">
    <value>Adult</value>
  </data>
  <data name="lblAgeLimit.Text" xml:space="preserve">
    <value>Passenger Age Limit: Adult: ( Above 12 )、Child: ( 3-12 )、Child (without bed): ( 0-2 )</value>
  </data>
  <data name="lblAgeLimit2.Text" xml:space="preserve">
    <value>Passenger Age Limit: Adult: ( Above 9 )、Child: ( Above 9 )、Child (without bed): ( 2-9 )</value>
  </data>
  <data name="lblAgeLimit3.Text" xml:space="preserve">
    <value>Passenger Age Limit: Adult: ( Above 11 )、Child: ( Above 11 )、Child (without bed): ( 2-11 )</value>
  </data>
  <data name="lblAgeLimit4.Text" xml:space="preserve">
    <value>Passenger Age Limit: Adult: ( Above 9 )、Child: ( Above 9 )、Child (without bed): ( 3-9 )</value>
  </data>
  <data name="lblAgeLimit5.Text" xml:space="preserve">
    <value>Passenger Age Limit: Adult: ( Above 12 )、Child: ( Above 12 )、Child (without bed): ( 2-11 )</value>
  </data>
  <data name="lblAgree.Text" xml:space="preserve">
    <value>Yes, I agree to the Terms and Conditions above.</value>
  </data>
  <data name="lblChild.Text" xml:space="preserve">
    <value>Child</value>
  </data>
  <data name="lblChildWithOut.Text" xml:space="preserve">
    <value>Child (without bed)</value>
  </data>
  <data name="lblChoice.Text" xml:space="preserve">
    <value>Please choice</value>
  </data>
  <data name="lblChoose.Text" xml:space="preserve">
    <value>Choose Number of Passengers &amp; Room Type</value>
  </data>
  <data name="lblConfirm.Text" xml:space="preserve">
    <value>Please confirm all of the information is correct, then click</value>
  </data>
  <data name="lblExceed.Text" xml:space="preserve">
    <value>Based on local fire safety regulation no rooms can exceed 2beds. triple or Quarter room based on two twin beds only</value>
  </data>
  <data name="lblNoExtra.Text" xml:space="preserve">
    <value>Hotel accommodations based on Twin sharing. No extra bed for child or the 3rd, 4th person</value>
  </data>
  <data name="lblOr.Text" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="lblPassengersCombination.Text" xml:space="preserve">
    <value>Passengers Combination</value>
  </data>
  <data name="lblQuatRoom.Text" xml:space="preserve">
    <value>Quat Room</value>
  </data>
  <data name="lblRecommendRoomType.Text" xml:space="preserve">
    <value>Recommend Room Type</value>
  </data>
  <data name="lblReference.Text" xml:space="preserve">
    <value>Reference For Choice Passengers and Room Type</value>
  </data>
  <data name="lblRemarks.Text" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="lblReview.Text" xml:space="preserve">
    <value>Review The Order You Selected</value>
  </data>
  <data name="lblSingleRoom.Text" xml:space="preserve">
    <value>Single Room</value>
  </data>
  <data name="lblTermsConditions.Text" xml:space="preserve">
    <value>Terms and Conditions</value>
  </data>
  <data name="lblTripleRoom.Text" xml:space="preserve">
    <value>Triple Room</value>
  </data>
  <data name="lblTwinRoom.Text" xml:space="preserve">
    <value>Twin Room</value>
  </data>
  <data name="lblTwinRoom3rd.Text" xml:space="preserve">
    <value>(3rd Person in Twin Room)</value>
  </data>
  <data name="lblTwinRoomNeed.Text" xml:space="preserve">
    <value>Twin Room (Child need bed)</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Cheap air tickets, Hotels, Vacation Packages, Cruises, Tours, Depart from USA, Online Booking</value>
  </data>
</root>